###############################################################################
# Package: home_assistant_config_git
# Description: Sensors and automations for Home Assistant Config git repo
###############################################################################

command_line:
  - sensor:
      name: config_commits_ahead
      command: 'git rev-list main --not origin/main'
      value_template: >-
        {{ value.split() | length }}
      scan_interval: 86400 # 1 day

  - sensor:
      name: config_commits_behind
      command: 'git rev-list origin/main --not main'
      value_template: >-
        {{ value.split() | length }}
      scan_interval: 86400 # 1 day

  - sensor:
      name: config_uncommitted_changes
      command: 'git diff --name-only'
      value_template: >-
        {{ value.split() | length }}
      scan_interval: 1 # 1 second
      
  - sensor:
      name: config_uncommitted_files_list
      command: 'git diff --name-only'
      value_template: >-
        {% set value_length = value.split() | length %}
        {{ value if value_length == 1 else value_length ~ " uncommitted files" }}
      scan_interval: 86400 # 1 day

template:
  - sensor:
    # Human readable display of commit difference
    - name: config_commits_difference
      state: >-
        {% set ahead = states('sensor.config_commits_ahead') | int %}
        {% set behind = states('sensor.config_commits_behind') | int %}

        {% if ahead + behind == 0 %}
          Up-to-date
        {% else %}
          {% if ahead > 0 %}
            {{ ahead ~ (" commits" if ahead > 1 else " commit ") ~ " ahead" -}}
          {% endif -%}
          {{ ", " if ahead > 0 and behind > 0 -}}
          {% if behind > 0 -%}
            {{ behind ~ (" commits" if behind > 1 else " commit") ~ " behind" }}
          {% endif %}
        {% endif %}
      icon: >-
        {% set ahead = states('sensor.config_commits_ahead') | int %}
        {% set behind = states('sensor.config_commits_behind') | int %}

        {% if ahead + behind == 0 %}
          mdi:check-circle-outline
        {% elif ahead == 1 and behind == 0 %}
          mdi:arrow-up-thin-circle-outline
        {% elif ahead == 0 and behind == 1 %}
          mdi:arrow-down-thin-circle-outline
        {% else %}
          mdi:swap-vertical-circle-outline
        {% endif %}

  - sensor:
    # Human readable display of uncommitted changes
    - name: config_uncommitted_changes_str
      state: >-
        {% set uncommitted_changes = states('sensor.config_uncommitted_changes') | int %}
        {% if uncommitted_changes == 0 %}
          No uncommitted changes
        {% elif uncommitted_changes == 1%}
          1 uncommitted change
        {% else %}
          {{ uncommitted_changes ~ "uncomitted changes" }}  
        {% endif %}

input_button:
  config_pull:
    name: Pull latest config
  config_commit:
    name: Commit config

input_text:
  config_commit_message:
    name: Config commit message

shell_command:
  config_git_fetch: 'git fetch'
  config_git_pull: 'git pull'
  config_git_add: 'git add -A'
  config_git_commit: 'git commit -m "{{ states(''input_text.config_commit_message'') }}"'
  config_git_push: 'git push -u origin main'

script:
  fetch_and_update_git_sensors:
    sequence:
      - alias: Run git fetch
        service: shell_command.config_git_fetch

      - alias: Update sensor.config_commits_behind
        service: homeassistant.update_entity
        target:
          entity_id:
            - sensor.config_commits_behind

      - alias: Update sensor.config_commits_ahead
        service: homeassistant.update_entity
        target:
          entity_id:
            - sensor.config_commits_ahead

  commit_and_push_changes:
    sequence:
      - alias: Stage changes
        service: shell_command.config_git_add
        
      - alias: Commit changes
        service: shell_command.config_git_commit
        
      - alias: Push changes
        service: shell_command.config_git_push
        
      - alias: Run fetch, and update git sensors
        service: script.fetch_and_update_git_sensors

automation:
  #############################################################################
  - alias: Fetch from remote, and update git sensors from webhook trigger
    id: home_assistant_config_git__remote_updated

    trigger:
      - alias: When webook received
        platform: webhook
        id: home_assistant_config_git__remote_updated
        webhook_id: !secret home_assistant_config_git__remote_updated
        local_only: false

    action:
      - alias: Run fetch, and update git sensors
        service: script.fetch_and_update_git_sensors

  #############################################################################
  - alias: Pull latest config from git
    id: home_assistant_config_git__config_pull

    trigger:
      - alias: When Pull latest config button is pressed
        platform: state
        entity_id: input_button.config_pull

    action:
      - alias: Run fetch, and update git sensors
        service: script.fetch_and_update_git_sensors

      - alias: Pull config from git
        service: shell_command.config_git_pull

      - alias: Run fetch, and update git sensors
        service: script.fetch_and_update_git_sensors

 #############################################################################
  - alias: Commit config to git
    id: home_assistant_config_git__config_commit

    trigger:
      - alias: When Config commit button is pressed
        platform: state
        entity_id: input_button.config_commit

    action:
      - alias: Commit and push changes
        service: script.commit_and_push_changes
        
 #############################################################################
  - alias: Get list of changed files
    id: home_assistant_config_git__uncommitted_changes
    
    trigger:
      - alias: When uncommitted changes detected
        platform: state
        entity_id: sensor.config_uncommitted_changes
    
    action:
      - alias: Refresh uncommitted files list
        service: homeassistant.update_entity
        target:
          entity_id:
            - sensor.config_uncommitted_files_list
